##########################################
# 各種設定
##########################################
# tmux起動時のシェルをzshにする
set -g default-shell /bin/zsh
set-option -g focus-events on

# tmuxを256色表示できるようにする
set -g default-terminal "screen-256color"
set -ga terminal-overrides "xterm-256color:Tc"

# paneの線を強調
set-option -g pane-active-border-style "bg=colour060"
set-option -ag pane-active-border-style "fg=black"

# window index, pane indexを変更
set -g base-index 1
setw -g pane-base-index 1

# マウス操作を有効にする
# iterm側の設定も必要 https://qiita.com/vintersnow/items/2880cc7b63a93a4d1b1d
set -g mouse on
bind -T edit-mode-vi WheelUpPane send-keys -X scroll-up
bind -T edit-mode-vi WheelDownPane send-keys -X scroll-down

##########################################
# キー設定
##########################################
# ESCの効きを良くする
set -s escape-time 0

# C-bのキーバインドを解除
unbind C-b
unbind =
# prefixキー
set -g prefix C-\\

# 設定リロード
bind R display-message "Reloaded ~/.tmux.conf" \; source-file ~/.tmux.conf

bind q kill-session

# タブウインドウを開く
bind t new-window -a -c "#{pane_current_path}"

#### Pane ####
bind \\ display-panes
set -g display-panes-time 10000
set -g display-time 3000

# Enterで現在のペインを最大化
bind Enter resize-pane -Z

# vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ペイン縦分割
bind | split-window -h
bind r split-window -h \; resize-pane -R 50
# ペイン横分割
bind - split-window -v
bind b split-window -v \; resize-pane -D 15

#### コピーモードの設定 ####
# コピーモードでvimキーバインドを使う
setw -g mode-keys vi
# Iterm2のKey bindings のScroll One Page Up/Down][ [Page Up/Down] を削除する必要あり
bind -n Pageup copy-mode -u
bind -T copy-mode-vi Escape send-keys -X cancel
# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection
# 'V' で行選択
bind -T copy-mode-vi V send -X select-line
# 'C-v' で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle
# 'y' でヤンク
bind -T copy-mode-vi y send -X copy-selection
# 'Y' で行ヤンク
bind -T copy-mode-vi Y send -X copy-line

#### Popup ####
bind g popup -w95% -h95% -E lazygit
bind C-g popup -w95% -h95% -E lazydocker
bind ` popup -w95% -h95% -E -d "#{pane_current_path}" '\
  if [ popup = $(tmux display -p -F "#{session_name}") ]; then \
    tmux detach-client ; \
  else \
    tmux attach -c $(tmux display -p -F "#{pane_current_path}") -t popup || tmux new -s popup ; \
  fi \
'
# popup以外のセッションに移動
bind s run-shell "tmux list-sessions -f \"##{!=:##{session_name},popup}\" | fzf-tmux -p | sed 's/:.*//' | xargs tmux switch -t"

##########################################
# ステータスバー
##########################################
set -g status-position bottom

# Color palette
set-option -g @c-bg "#1c1c1c"
set-option -g @c-fg "#c0c0c0"
set-option -g @c-primary "#5f5f87"
set-option -g @c-info "#00BAFE"
set-option -g @c-info-content "#042E49"

# Status bar
set -g status-justify centre
set -g status-interval 10 # 更新頻度(second)
set -g status-style bg="#{@c-bg}",fg="#{@c-fg}"

# Window status - current
set-option -gw window-status-current-format '#[bg=#{@c-primary},fg=#{@c-fg},bold] #I.#W '

# Window status - normal
set -gw window-status-separator ""
set-option -gw window-status-format '#( \
  if [ "#{window_bell_flag}" = "1" ]; then \
    echo "#[bg=#{@c-info},fg=#{@c-info-content}] 󱅫 #I.#W "; \
  else \
    echo "#[bg=#{@c-bg},fg=#{@c-fg}] #I.#W "; \
  fi \
)'

# Left status
set -g status-left-length 100
set -g @prefix_highlight_prefix_prompt 'Waiting Tmux key...'
set -g status-left "#[bg=#{@c-primary},fg=#{@c-fg}] #S #[default] #P #{prefix_highlight} "

# Right status
set -g status-right-length 100
set -g status-right "#{sysstat_cpu}  #{sysstat_mem}  #{sysstat_loadavg} "

##########################################
# tpm_plugins
##########################################
# TPM 自体
set -g @plugin 'tmux-plugins/tpm'

# プラグイン一覧
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'
set -g @plugin 'alexwforsythe/tmux-which-key'

# auto start terminal
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm'

# auto restore tmux
set -g @continuum-restore 'on'
set -g @continuum-save-interval '10' # 自動保存の間隔(minute)

# load plugins
# <prifix>Ctrl+Uでアップデート、<prifix>Ctrl+Iでインストール
if-shell "[ -x ${HOME}/.tmux/plugins/tpm/tpm ]" "run-shell ${HOME}/.tmux/plugins/tpm/tpm"
