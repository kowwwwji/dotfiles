// Place your key bindings in this file to override the defaults
[
  // vimBind ------------
  // moveCursor
  {
    "key": "ctrl+h",
    "command": "cursorLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "cursorDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "cursorUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "cursorRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+p",
    "command": "cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+n",
    "command": "cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+w",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus"
  },
  // select
  {
    "key": "ctrl+shift+h",
    "command": "cursorLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "cursorDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "cursorRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+b",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  // vimBind end-----------
  // intelliSense move
  {
    "key": "ctrl+n",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  // terminal
  {
    "key": "cmd+]",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+[BracketLeft]",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  // other
  {
    "key": "cmd+,",
    "command": "workbench.action.openSettingsJson"
  },
  {
    "key": "ctrl+shift+[Minus]",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+[IntlRo]",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "gitlens:enabled && config.gitlens.keymap == 'chorded'"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPreviousTerminalFocus",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+]",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+[BracketLeft]",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+]",
    "command": "-markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+\\ ctrl+enter",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  }
]
